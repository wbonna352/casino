services:
  postgres:
    image: postgres:17
    container_name: casino-postgres
    hostname: casino-db
    environment:
      TZ: Europe/Warsaw
      POSTGRES_USER: casino
      POSTGRES_PASSWORD: casino
      POSTGRES_DB: casino
    ports:
      - "5432:5432"
    command: >
      postgres -c wal_level=logical
               -c max_replication_slots=4
               -c max_wal_senders=4
    volumes:
      - casino-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - kafka

  zookeeper:
    container_name: casino-zookeeper
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
  kafka:
    container_name: casino-kafka
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS:
        "INTERNAL://casino-kafka:9090,\
         EXTERNAL://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS:
        "INTERNAL://casino-kafka:9090,\
         EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:
        "INTERNAL:PLAINTEXT,\
         EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper

  debezium:
    container_name: casino-debezium
    image: debezium/connect:2.5
    ports:
      - "8083:8083"
    working_dir: /
    environment:
      BOOTSTRAP_SERVERS: casino-kafka:9090
      GROUP_ID: debezium-group
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      PLUGIN_PATH: /kafka/connect
    volumes:
      - ./connectors:/tmp/connectors
    depends_on:
      - kafka
      - postgres

  curl:
    image: curlimages/curl
    container_name: casino-curl
    volumes:
      - ./connectors:/connectors
      - ./entrypoint.sh:/entrypoint.sh
    entrypoint: ["/entrypoint.sh"]
    depends_on:
      - debezium


  minio:
    image: minio/minio:latest
    container_name: casino-minio
    volumes:
      - ./minio/data:/data
    entrypoint: sh
    ports:
      - "9000:9000"
      - "9010:9010"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: -c 'mkdir -p /minio/casino &&/usr/bin/minio server /minio/ --console-address ":9010"'

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-master
    hostname: casino-spark-master
    working_dir: /app
    environment:
      SPARK_MODE: master
      SPARK_MASTER: spark://casino-spark-master:7077
      SPARK_LOCAL_HOSTNAME: casino-spark-master
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./src:/app
      - spark-data:/opt/spark/work-dir
    depends_on:
      - minio
      - debezium

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-worker
    hostname: casino-spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER: spark://casino-spark-master:7077
      SPARK_LOCAL_HOSTNAME: casino-spark-worker
    depends_on:
      - spark-master
    volumes:
      - spark-data:/opt/spark/work-dir

  spark-players:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-players
    hostname: casino-spark-players
    working_dir: /app
    environment:
      TABLE_NAME: players
    volumes:
      - ./src:/app
    depends_on:
      - minio
      - spark-master
    command: bash run_kafka_to_minio_app.sh

  spark-transactions:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-transactions
    hostname: casino-spark-transactions
    working_dir: /app
    environment:
      TABLE_NAME: transactions
    volumes:
      - ./src:/app
    depends_on:
      - minio
      - spark-master
    command: bash run_kafka_to_minio_app.sh

  spark-games:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-games
    hostname: casino-spark-games
    working_dir: /app
    environment:
      TABLE_NAME: games
    volumes:
      - ./src:/app
    depends_on:
      - minio
      - spark-master
    command: bash run_kafka_to_minio_app.sh



  user1:
    image: python:3.10-slim
    container_name: casino-user1
    volumes:
      - ./src:/app
    working_dir: /app
    environment:
      PLAYER_EMAIL: "example@example.com"
      PLAYER_FIRST_NAME: "example"
      PLAYER_LAST_NAME: "example"
      POSTGRES_HOST: "casino-db"
    command: bash -c "pip install sqlalchemy psycopg2-binary && python db/App.py"


volumes:
  casino-db:
  minio-data:
  spark-data:
