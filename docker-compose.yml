version: '3.8'

services:
  postgres:
    image: postgres:17
    container_name: casino-postgres
    hostname: casino-db
    environment:
      TZ: Europe/Warsaw
      POSTGRES_USER: casino
      POSTGRES_PASSWORD: casino
      POSTGRES_DB: casino
    ports:
      - "5432:5432"
    command: >
      postgres -c wal_level=logical
               -c max_replication_slots=4
               -c max_wal_senders=4
    volumes:
      - casino-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  user1:
    image: python:3.10-slim
    container_name: user1-container
    volumes:
      - ./src:/app
    working_dir: /app
    environment:
      USER_EMAIL: "example@example.com"
      POSTGRES_HOST: "postgres"
    command: bash -c "pip install sqlalchemy psycopg2-binary && python db/App.py"
    depends_on:
      - postgres


  zookeeper:
    container_name: casino-zookeeper
    image: wurstmeister/zookeeper
    ports:
    - "2181:2181"
  kafka:
    container_name: casino-kafka
    image: wurstmeister/kafka
    ports:
    - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS:
        "INTERNAL://casino-kafka:9090,\
         EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS:
        "INTERNAL://casino-kafka:9090,\
         EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:
        "INTERNAL:PLAINTEXT,\
         EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    depends_on:
      - zookeeper

  debezium:
    container_name: casino-debezium
    image: debezium/connect:2.5
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9090
      GROUP_ID: debezium-group
      CONFIG_STORAGE_TOPIC: debezium_connect_config
      OFFSET_STORAGE_TOPIC: debezium_connect_offsets
      STATUS_STORAGE_TOPIC: debezium_connect_status
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      PLUGIN_PATH: /kafka/connect
    depends_on:
      - kafka
      - zookeeper
      - postgres

  minio:
    image: minio/minio:latest
    container_name: casino-minio
    volumes:
      - ./minio/data:/data
    ports:
      - "9000:9000"
      - "9010:9010"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: minio server /data/minio/ --console-address ":9010"

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-master
    hostname: casino-spark-master
    working_dir: /app
    environment:
      SPARK_MASTER: spark://casino-spark-master:7077
      SPARK_MODE: master
      SPARK_LOCAL_HOSTNAME: casino-spark-master
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app
      - spark-data:/opt/spark/work-dir
    entrypoint: bash run_kafka_to_minio_app.sh

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: casino-spark-worker
    hostname: casino-spark-worker
    environment:
      SPARK_MASTER: spark://casino-spark-master:7077
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://casino-spark-master:7077
      SPARK_LOCAL_HOSTNAME: casino-spark-worker
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    volumes:
      - spark-data:/opt/spark/work-dir

volumes:
  casino-db:
  minio-data:
  spark-data:

networks:
  default:
    name: casino_network